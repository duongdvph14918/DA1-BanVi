/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package quanlycuahangpoly;

import Model.HoaDonCT;
import Model.HoaDonCT1;
import Model.KhachHang;
import Model.KhuyenMai;
import Model.SanPham;
import Repository.KhachHangRepository;
import Service.HoaDonDAO;
import Service.KhachHangService;
import Service.SanPhamDAO;
import static java.awt.image.ImageObserver.HEIGHT;
import static java.awt.image.ImageObserver.WIDTH;
import java.util.Date;
import java.util.List;
import java.util.Random;
import javax.swing.JOptionPane;
import static javax.swing.WindowConstants.EXIT_ON_CLOSE;
import javax.swing.table.DefaultTableModel;
import quanlycuahangpoly.Dao.KhuyenMaiDAO;

/**
 *
 * @author Windows
 */
public class BanHangJPanel extends javax.swing.JPanel {

    SanPhamDAO service = new SanPhamDAO();
    HoaDonDAO serviceHD = new HoaDonDAO();
    KhuyenMaiDAO khuyenMaiservice = new KhuyenMaiDAO();
    KhachHangRepository khachHangRepository = new KhachHangRepository();
    KhachHangService khachHangService = new KhachHangService();
    int index = -1;

    String tenNV, email;
    DefaultTableModel mol = new DefaultTableModel();

    /**
     * Creates new form BanHangJPanel
     */
    public BanHangJPanel(String tenNV, String email) {
        initComponents();
        this.tenNV = tenNV;
        this.email = email;
        txt_KhachHang1.setText("Khách Lẻ");
        this.fillTableSP(service.seachSP(txt_TimKiemSP.getText()));
        this.fillTableHD(serviceHD.getAllHDChuaHT());
        this.fillTableKH(khachHangService.firdKhachHangHD(txt_KhachHang.getText()));
        txt_NhanVien.setText(tenNV);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_NhanVien = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        lbl_maHD = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lbl_TongTien = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        rdo_TienMat = new javax.swing.JRadioButton();
        rdo_ChuyenKhoan = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        txt_MaGiamGia = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        txt_KhachHang1 = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_hoaDon = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbl_hoaDonCT = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_SanPham = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txt_TimKiemSP = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbl_KhachHang = new javax.swing.JTable();
        txt_KhachHang = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Thanh Toán", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel4.setText("Hóa Đơn");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Nhân Viên");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));

        txt_NhanVien.setForeground(java.awt.Color.red);
        txt_NhanVien.setEnabled(false);
        jPanel2.add(txt_NhanVien, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 70, 144, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Khách Hàng");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));

        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton3.setText("+");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 110, -1, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Mã Hóa Đơn : ");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, -1));

        lbl_maHD.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lbl_maHD.setForeground(java.awt.Color.red);
        lbl_maHD.setText("jLabel6");
        jPanel2.add(lbl_maHD, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 150, -1, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setText("Tổng Tiền :");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, -1, -1));

        lbl_TongTien.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lbl_TongTien.setForeground(java.awt.Color.red);
        lbl_TongTien.setText("jLabel6");
        jPanel2.add(lbl_TongTien, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 180, -1, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setText("Phương Thức Thanh Toán :");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, -1, -1));

        rdo_TienMat.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdo_TienMat.setSelected(true);
        rdo_TienMat.setText("Tiền Mặt");
        jPanel2.add(rdo_TienMat, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, -1, -1));

        rdo_ChuyenKhoan.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdo_ChuyenKhoan.setText("Chuyển Khoản");
        jPanel2.add(rdo_ChuyenKhoan, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 230, -1, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setText("Mã Giảm Giá ( Nếu Có)");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, -1, -1));

        txt_MaGiamGia.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txt_MaGiamGia.setForeground(java.awt.Color.red);
        jPanel2.add(txt_MaGiamGia, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, 180, 32));

        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton4.setText("Hủy Hóa Đơn");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 320, 124, 41));

        jButton5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton5.setText("Tạo Hóa Đơn");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 320, 140, 41));

        jButton6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton6.setText("Thanh Toán");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 370, 276, 50));

        txt_KhachHang1.setForeground(java.awt.Color.red);
        txt_KhachHang1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_KhachHang1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_KhachHang1KeyTyped(evt);
            }
        });
        jPanel2.add(txt_KhachHang1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 110, 144, -1));

        jButton7.setText("Áp Dụng");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 280, -1, 30));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Hóa Đơn", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tbl_hoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã  Hóa Đơn", "Tên Nhân Viên", "Tên Khách Hàng", "Ngày Tạo Hoá Đơn", "Trạng Thái"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_hoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_hoaDonMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbl_hoaDon);

        jPanel3.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 20, 820, 120));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Hóa Đơn Chi Tiết", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tbl_hoaDonCT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã Sản Phẩm", "Tên Sản phẩm", "Kiểu Dáng", "Màu Sắc ", "Thương Hiệu", "Giá Bán", "Số Lượng", "Tổng Tiền"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_hoaDonCT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_hoaDonCTMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tbl_hoaDonCT);

        jPanel4.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 710, 130));

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setText("Xóa SP");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 90, 110, 50));

        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton2.setText("Sửa Số Lượng");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 20, 110, 50));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Danh Sách Sản Phẩm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tbl_SanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã Sản Phẩm", "Tên Sản Phẩm", "Kiểu Dáng", "Thương Hiệu", "Màu Sắc", "Số Lượng", "Giá Bán"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_SanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_SanPhamMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_SanPham);

        jPanel5.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 820, 190));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Tìm Kiếm Sản Phẩm ");
        jPanel5.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, -1, -1));

        txt_TimKiemSP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_TimKiemSPKeyReleased(evt);
            }
        });
        jPanel5.add(txt_TimKiemSP, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 200, 30));

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tbl_KhachHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Tên KH", "SĐT"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_KhachHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_KhachHangMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tbl_KhachHangMouseEntered(evt);
            }
        });
        jScrollPane4.setViewportView(tbl_KhachHang);

        jPanel6.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 280, 140));

        txt_KhachHang.setForeground(java.awt.Color.red);
        txt_KhachHang.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_KhachHangKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_KhachHangKeyTyped(evt);
            }
        });
        jPanel6.add(txt_KhachHang, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 10, 200, -1));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("Tìm Kiếm ");
        jPanel6.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, 20));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 850, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 850, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 850, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 93, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(31, 31, 31))
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1243, 770));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // Thêm khách hàng mới
        this.addKhNew();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // hủy hóa đơn
        this.huyHD();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // tạo hóa đơn
        this.addHD();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // thanh toán
        this.thanhToanHD();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void txt_KhachHang1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_KhachHang1KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_KhachHang1KeyReleased

    private void txt_KhachHang1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_KhachHang1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_KhachHang1KeyTyped

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        //khuyenmai
//        this.addMaGiamGia();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void tbl_hoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_hoaDonMouseClicked
        // Click hiện thị hóa đơn chi tiết
        this.showHDCT();
        this.getMaHD();
    }//GEN-LAST:event_tbl_hoaDonMouseClicked

    private void tbl_hoaDonCTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_hoaDonCTMouseClicked
        // Click lấy ID chi tiết sản phẩm
        this.IDCTSP_tableHDCT();
        int index1 = tbl_hoaDonCT.getSelectedRow();
        HoaDonCT1 hd1 = serviceHD.getAllCTHD(getMaHD()).get(index1);
    }//GEN-LAST:event_tbl_hoaDonCTMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Xóa sản phẩm trong hóa đơn chi tiết
        this.removeSPHDCT();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // Sửa số lượng
        this.updateSLHDCT();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void tbl_SanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_SanPhamMouseClicked
        // Click thêm sản phẩm vào hóa đơn chi tiết
        this.checkChoiceHD();
    }//GEN-LAST:event_tbl_SanPhamMouseClicked

    private void txt_TimKiemSPKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_TimKiemSPKeyReleased
        // tìm kiếm sản phẩm
        this.timKiemSP();
    }//GEN-LAST:event_txt_TimKiemSPKeyReleased

    private void tbl_KhachHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_KhachHangMouseClicked
        // Click khách hàng
        this.getKH();
    }//GEN-LAST:event_tbl_KhachHangMouseClicked

    private void tbl_KhachHangMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_KhachHangMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_tbl_KhachHangMouseEntered

    private void txt_KhachHangKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_KhachHangKeyReleased
        // Tìm khách hàng
        this.fillTableKH(khachHangService.firdKhachHangHD(txt_KhachHang.getText()));
    }//GEN-LAST:event_txt_KhachHangKeyReleased

    private void txt_KhachHangKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_KhachHangKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_KhachHangKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lbl_TongTien;
    private javax.swing.JLabel lbl_maHD;
    private javax.swing.JRadioButton rdo_ChuyenKhoan;
    private javax.swing.JRadioButton rdo_TienMat;
    private javax.swing.JTable tbl_KhachHang;
    private javax.swing.JTable tbl_SanPham;
    private javax.swing.JTable tbl_hoaDon;
    private javax.swing.JTable tbl_hoaDonCT;
    private javax.swing.JTextField txt_KhachHang;
    private javax.swing.JTextField txt_KhachHang1;
    private javax.swing.JTextField txt_MaGiamGia;
    private javax.swing.JTextField txt_NhanVien;
    private javax.swing.JTextField txt_TimKiemSP;
    // End of variables declaration//GEN-END:variables

    // Code fillTable : 
    private void fillTableSP(List<SanPham> list) {
        mol = (DefaultTableModel) tbl_SanPham.getModel();
        mol.setRowCount(0);
        for (SanPham x : list) {
            mol.addRow(new Object[]{
                x.getMachitietVi(),
                x.getTenVi(),
                x.getKieuDang(),
                x.getThuongHieu(),
                x.getMauSac(),
                x.getSoLuong(),
                x.getGiaBan()
            });
        }
    }

    private void fillTableHD(List<HoaDonCT> list) {
        mol = (DefaultTableModel) tbl_hoaDon.getModel();
        mol.setRowCount(0);
        for (HoaDonCT x : list) {
            mol.addRow(new Object[]{
                x.getMaHD(),
                x.getTenNV(),
                x.getTenKH(),
                x.getNgayTT(),
                x.getTT()
            });
        }
    }

    void fillTableHDCT() {
        index = tbl_hoaDon.getSelectedRow();
        HoaDonCT hd = serviceHD.getAllHDChuaHT().get(index);
        mol = (DefaultTableModel) tbl_hoaDonCT.getModel();
        mol.setRowCount(0);
        for (HoaDonCT1 hoaDonCT1 : serviceHD.getAllCTHD(hd.getMaHD())) {
            mol.addRow(new Object[]{
                hoaDonCT1.getMaVi(),
                hoaDonCT1.getTenVi(),
                hoaDonCT1.getKieuDang(),
                hoaDonCT1.getMauSac(),
                hoaDonCT1.getThuongHieu(),
                hoaDonCT1.getGiaBan(),
                hoaDonCT1.getSoLuong(),
                hoaDonCT1.getTongTien()
            });
        }
    }
    // show hóa đơn chi tiết 

    private void showHDCT() {
        double tongTien = 0;
        index = tbl_hoaDon.getSelectedRow();
        HoaDonCT hd = serviceHD.getAllHDChuaHT().get(index);
        mol = (DefaultTableModel) tbl_hoaDonCT.getModel();
        mol.setRowCount(0);
        for (HoaDonCT1 hoaDonCT1 : serviceHD.getAllCTHD(hd.getMaHD())) {
            mol.addRow(new Object[]{
                hoaDonCT1.getMaVi(),
                hoaDonCT1.getTenVi(),
                hoaDonCT1.getKieuDang(),
                hoaDonCT1.getMauSac(),
                hoaDonCT1.getThuongHieu(),
                hoaDonCT1.getGiaBan(),
                hoaDonCT1.getSoLuong(),
                hoaDonCT1.getTongTien()
            });
            tongTien = hoaDonCT1.getTongTien() + tongTien;
        }
        lbl_TongTien.setText(String.valueOf(tongTien));
        lbl_maHD.setText(hd.getMaHD());
        txt_KhachHang1.setText("Khách Lẻ");
    }

    // Show tổng tiền 
    private void showTongTien() {
        double tongTien = 0;
        index = tbl_hoaDon.getSelectedRow();
        HoaDonCT hd = serviceHD.getAllHDChuaHT().get(index);
        mol = (DefaultTableModel) tbl_hoaDonCT.getModel();
        mol.setRowCount(0);
        for (HoaDonCT1 hoaDonCT1 : serviceHD.getAllCTHD(hd.getMaHD())) {
            mol.addRow(new Object[]{
                hoaDonCT1.getMaVi(),
                hoaDonCT1.getTenVi(),
                hoaDonCT1.getKieuDang(),
                hoaDonCT1.getMauSac(),
                hoaDonCT1.getThuongHieu(),
                hoaDonCT1.getGiaBan(),
                hoaDonCT1.getSoLuong(),
                hoaDonCT1.getTongTien()
            });
            tongTien = hoaDonCT1.getTongTien() + tongTien;
        }
        lbl_TongTien.setText(String.valueOf(tongTien));
    }

    // Chọn số lượng sản phẩm 
    int sl = 0;

    int choiceSLSP() {
        index = tbl_SanPham.getSelectedRow();
        SanPham sp = service.seachSP(txt_TimKiemSP.getText()).get(index);
        sl = Integer.valueOf(JOptionPane.showInputDialog("nhập số lượng sản phẩm"));
        System.out.println(sl);
        return sl;
    }

    // lấy ra mã hóa đơn trong bảng hóa đơn 
    String getMaHD() {
        index = tbl_hoaDon.getSelectedRow();
        HoaDonCT hd = serviceHD.getAllHDChuaHT().get(index);
        return hd.getMaHD();
    }

    // Lấy ra mã hóa đơn chi tiết trong bảng hóa đơn chi tiết 
    String getMaHDCT() {
        int index_HDCT = tbl_hoaDonCT.getSelectedRow();
        HoaDonCT1 hd1 = serviceHD.getAllCTHD(getMaHD()).get(index_HDCT);
        return hd1.getMaHDCT();
    }

    // lấy ra số lượng trong hóa đơn chi tiết 
    int getSoLuongSPHDCT() {
        int index_HDCT = tbl_hoaDonCT.getSelectedRow();
        HoaDonCT1 hd1 = serviceHD.getAllCTHD(getMaHD()).get(index_HDCT);
        return hd1.getSoLuong();
    }

    // Lấy ra id sản phẩm chi tiết ở bảng sản phẩm 
    int IDCTSP() {
        int index_SP = tbl_SanPham.getSelectedRow();
        SanPham sp = service.seachSP(txt_TimKiemSP.getText()).get(index_SP);
        return service.getIDCTSP(sp.getMachitietVi());
    }

    // Lấy ra id sản phẩm chi tiết ở bảng hóa đơn chi tiết 
    int IDCTSP_tableHDCT() {
        int index1 = tbl_hoaDonCT.getSelectedRow();
        HoaDonCT1 hd1 = serviceHD.getAllCTHD(getMaHD()).get(index1);
        return serviceHD.getID_CTSP(hd1.getMaHDCT());
    }

    // lấy ra giá sản phẩm 
    double moneySP() {
        index = tbl_SanPham.getSelectedRow();
        SanPham sp = service.seachSP(txt_TimKiemSP.getText()).get(index);
        return sp.getGiaBan();
    }

    // Lấy ra khách hàng từ bảng lên form 
    private void getKH() {
        int index_KH = tbl_KhachHang.getSelectedRow();
        KhachHang kh = khachHangService.firdKhachHangHD(txt_KhachHang.getText()).get(index_KH);
        txt_KhachHang1.setText(kh.getTenKhachHang());
    }

    // lấy ra id khách hàng từ bảng khách hàng 
    private int getIDKH() {
        int index_KH = tbl_KhachHang.getSelectedRow();
        KhachHang kh = khachHangService.firdKhachHangHD(txt_KhachHang.getText()).get(index_KH);
        return kh.getIdKhachHang();
    }
    // Lấy ra số lượng sản phẩm từ bảng sản phẩm 
    int getSoLuongSP() {
        int index_SP = tbl_SanPham.getSelectedRow();
        SanPham sp = service.seachSP(txt_TimKiemSP.getText()).get(index_SP);
        return sp.getSoLuong();
    }

    // Tạo mã hoá đơn ngẫu nhiên 
    public static String randum() {
        Random rd = new Random();
        int numberCode = rd.nextInt(200) + 200;
        return String.valueOf(numberCode);
    }

    // Check đã chọn hóa đơn chưa
    private void checkChoiceHD() {
        index = tbl_hoaDon.getSelectedRow();
        if (index < 0) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn hóa đơn ! ");
        } // Đã chọn hóa đơn 
        else {
            try {
                // Check sản phẩm đã có trong hóa đơn chưa 
                int checkSP = 0;
                int soLuong = choiceSLSP();
                // Check số lượng 
                if (soLuong <= 0) {
                    JOptionPane.showMessageDialog(this, "Số lượng không hợp lệ");
                } else if (soLuong > getSoLuongSP()) {
                    JOptionPane.showMessageDialog(this, "Số Lượng Sản Phẩm Không Đủ !");
                } else {
                    int index_HD = tbl_hoaDon.getSelectedRow();
                    HoaDonCT hd = serviceHD.getAllHDChuaHT().get(index_HD);

                    for (HoaDonCT1 ct : serviceHD.getAllCTHD(hd.getMaHD())) {
                        if (ct.getIdCTVI() == IDCTSP()) {
                            // đã tồn tại 
                            serviceHD.updateSLSPHDCT(ct.getMaHDCT(), soLuong);
                            double giaUpdate = serviceHD.getSLSP(IDCTSP(), serviceHD.getIDHD(hd.getMaHD())) * moneySP();
                            serviceHD.updateGiaSPHDCT(giaUpdate, IDCTSP(), serviceHD.getIDHD(hd.getMaHD()));
                            service.reduceSLSP(IDCTSP(), soLuong);
                            this.fillTableHDCT();
                            this.fillTableSP(service.seachSP(txt_TimKiemSP.getText()));
                            this.showTongTien();
                            checkSP = 1;
                        }
                    }
                    // chưa tồn tại
                    if (checkSP == 0) {
                        // Thêm sản phẩm vào hóa đơn 
                        service.reduceSLSP(IDCTSP(), soLuong);
                        serviceHD.addSPHDCT(serviceHD.getIDHD(hd.getMaHD()), IDCTSP(), "HDCT" + randum(), soLuong, moneySP() * sl);
                        // System.out.println(serviceHD.getIDHD(hd.getMaHD()));
                        this.fillTableHDCT();
                        this.fillTableSP(service.seachSP(txt_TimKiemSP.getText()));
                        this.showTongTien();
                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Số lượng sản phẩm không hợp lệ !");
            }

        }
    }

    private void fillTableKH(List<KhachHang> list) {
        mol = (DefaultTableModel) tbl_KhachHang.getModel();
        mol.setRowCount(0);
        for (Model.KhachHang kh : list) {
            if (kh.isTrangThai() != false) {
                mol.addRow(new Object[]{
                    kh.getIdKhachHang(),
                    kh.getTenKhachHang(),
                    kh.getSdt()
                });
            }
        }
    }

    private void searchKH(String ma) {
        List<Model.KhachHang> list;
        DefaultTableModel dtm;
        list = khachHangService.Search(ma);
        dtm = (DefaultTableModel) tbl_KhachHang.getModel();
        dtm.setRowCount(0);
        for (Model.KhachHang s : list) {
            dtm.addRow(new Object[]{s.getIdKhachHang(),
                s.getTenKhachHang(), s.getSdt(),});
        }
    }
    // tạo hóa đơn 
    private void addHD() {
        try {
            if (email.equals("")) {
                JOptionPane.showMessageDialog(this, "Bạn Chưa đăng nhập !");
            } else {
                serviceHD.addHoaDon(1, serviceHD.getIDNhanVien(email), 1, "HD" + randum(), 0, 0);
                this.fillTableHD(serviceHD.getAllHDChuaHT());
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Bạn Chưa đăng nhập !");
        }
    }

    // Hủy hóa đơn 
    private void huyHD() {
        try {
            index = tbl_hoaDon.getSelectedRow();
            if (index < 0) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn hóa đơn hủy ! ");
            } // Đã chọn hóa đơn 
            else {
                String Options[] = {"Xác Nhận", "Trở Về"};
                int choice = JOptionPane.showOptionDialog(this, "Xác Nhận Hủy Hóa Đơn ? ", "Quản Lý Bán Sản Phẩm BolyBop", WIDTH, HEIGHT, null, Options, EXIT_ON_CLOSE);
                if (choice == 0) {
                    index = tbl_hoaDon.getSelectedRow();
                    HoaDonCT hd = serviceHD.getAllHDChuaHT().get(index);
                    serviceHD.removeHoaDon(serviceHD.getIDHD(hd.getMaHD()));
                    this.fillTableHD(serviceHD.getAllHDChuaHT());
                    lbl_TongTien.setText("");
                    lbl_maHD.setText("");
                    mol = (DefaultTableModel) tbl_hoaDonCT.getModel();
                    mol.setRowCount(0);
                }
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Hủy thất bại");
        }
    }

    // Tìm kiếm sản phẩm 
    private void timKiemSP() {
        this.fillTableSP(service.seachSP(txt_TimKiemSP.getText()));
    }

    // Sửa số lượng trong hóa đơn chi tiết 
    private void updateSLHDCT() {
        index = tbl_hoaDonCT.getSelectedRow();
        // HoaDonCT1 hd = serviceHD.getAllCTHD(getMaHD()).get(index);
        if (index < 0) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn sản phẩm muốn sửa !");
        } // Đã chọn sản phẩm trong hóa đơn chi tiết 
        else {
            try {
                int sumSL = service.sumSLSP(IDCTSP_tableHDCT(), getMaHDCT());
                int soLuongUpdate = Integer.valueOf(JOptionPane.showInputDialog("Nhập số lượng muốn sửa "));
                if (soLuongUpdate <= sumSL && soLuongUpdate > 0) {
                    serviceHD.setSLHDCT(getMaHDCT(), soLuongUpdate);
                    service.updateSLSP(IDCTSP_tableHDCT(), sumSL - soLuongUpdate);
                    double giaUpdate = soLuongUpdate * serviceHD.getGiaBan(IDCTSP_tableHDCT());
                    serviceHD.updateGiaSPHDCT_btnSua(giaUpdate, getMaHDCT());
                    this.fillTableHDCT();
                    this.fillTableSP(service.seachSP(txt_TimKiemSP.getText()));
                    this.showTongTien();
                } else if (soLuongUpdate < 0) {
                    JOptionPane.showMessageDialog(this, "Số lượng sửa không hợp lệ !");
                } else {
                    JOptionPane.showMessageDialog(this, "Số lượng sản phẩm không đủ !");
                }

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "SỐ lượng sửa không hợp lệ !");
            }
        }
    }

    // Xóa sản phẩm trong hóa đơn chi tiết 
    private void removeSPHDCT() {
        index = tbl_hoaDonCT.getSelectedRow();
        // HoaDonCT1 hd = serviceHD.getAllCTHD(getMaHD()).get(index);
        if (index < 0) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn sản phẩm muốn xóa");
        } // Đã chọn sản phẩm trong hóa đơn chi tiết 
        else {
            String Options[] = {"Xác Nhận", "Trở Về"};
            int choice = JOptionPane.showOptionDialog(this, "Xác Nhận xóa sản phẩm  ? ", "Quản Lý Bán Sản Phẩm BolyBop", WIDTH, HEIGHT, null, Options, EXIT_ON_CLOSE);
            if (choice == 0) {
                service.addSLSP(IDCTSP_tableHDCT(), getSoLuongSPHDCT());
                serviceHD.deleteSPHDCT(getMaHDCT());
                this.fillTableHDCT();
                this.fillTableSP(service.seachSP(txt_TimKiemSP.getText()));
                JOptionPane.showMessageDialog(this, "Xóa thành công ");
                this.showTongTien();
            }
        }
    }

    // thêm khách hàng mới 
    private void addKhNew() {
        NewKhachHangJDiaLog newKH = new NewKhachHangJDiaLog();
        newKH.setVisible(true);
        this.fillTableKH(khachHangService.firdKhachHangHD(txt_KhachHang.getText()));

    }
    // lấy ra phương thức thanh toán 
    int getPTTT() {
        if (rdo_TienMat.isSelected()) {
            return 0;
        } else {
            return 1;
        }
    }

//    // Thanh toán hóa đơn 
//    private void thanhToanHD() {
//        try {
//            index = tbl_hoaDon.getSelectedRow();
//            if (index < 0) {
//                JOptionPane.showMessageDialog(this, "Vui lòng chọn hóa đơn thanh toán ! ");
//            } // Đã chọn hóa đơn 
//            else {
//                try {
//                    if(txt_KhachHang1.getText().equals("")) {
//                        JOptionPane.showMessageDialog(this, "Vui lòng chọn khách hàng !");
//                    } 
//                    // nếu khách không muốn cung cấp thông tin 
//                    
//                      else  if (rdo_TienMat.isSelected()) {
//                            double moneyNhan = Integer.valueOf(JOptionPane.showInputDialog("Nhập số tiền nhận của khách "));
//                            if (moneyNhan == Double.valueOf(lbl_TongTien.getText())) {
//                                serviceHD.thanhToanHD(lbl_maHD.getText(),1, Double.valueOf(lbl_TongTien.getText()), getPTTT());
//                                this.fillTableHD(serviceHD.getAllHDChuaHT());
//                                JOptionPane.showMessageDialog(this, "Thanh toán thành công !");
//                            } else if (moneyNhan < Double.valueOf(lbl_TongTien.getText())) {
//                                JOptionPane.showMessageDialog(this, "Thanh toán thât bại ! \nKhách đưa thiếu tiền !");
//                            } else {
//                                double moneyTra = moneyNhan - Double.valueOf(lbl_TongTien.getText());
//                                serviceHD.thanhToanHD(lbl_maHD.getText(),1, Double.valueOf(lbl_TongTien.getText()), getPTTT());
//                                this.fillTableHD(serviceHD.getAllHDChuaHT());
//                                JOptionPane.showMessageDialog(this, "Thanh Toán Thành Công !" + "\nSố tiền thối khách : " + String.valueOf(moneyTra) + " VNĐ");
//
//                            }
//                        } else if (rdo_ChuyenKhoan.isEnabled()) {
//                            serviceHD.thanhToanHD(lbl_maHD.getText(),1, Double.valueOf(lbl_TongTien.getText()), getPTTT());
//                            this.fillTableHD(serviceHD.getAllHDChuaHT());
//                            JOptionPane.showMessageDialog(this, "Thanh toán thành công !");
//                        }
//                    
//                    // Khách cung cấp thông tin 
//                   if(txt_KhachHang1.getText().isBlank()){
//                        if (rdo_TienMat.isSelected()) {
//                        double moneyNhan = Integer.valueOf(JOptionPane.showInputDialog("Nhập số tiền nhận của khách "));
//                        if (moneyNhan == Double.valueOf(lbl_TongTien.getText())) {
//                            serviceHD.thanhToanHD(lbl_maHD.getText(), getIDKH(), Double.valueOf(lbl_TongTien.getText()), getPTTT());
//                            this.fillTableHD(serviceHD.getAllHDChuaHT());
//                            JOptionPane.showMessageDialog(this, "Thanh toán thành công !");
//                        } else if (moneyNhan < Double.valueOf(lbl_TongTien.getText())) {
//                            JOptionPane.showMessageDialog(this, "Thanh toán thât bại ! \nKhách đưa thiếu tiền !");
//                        } else {
//                            double moneyTra = moneyNhan - Double.valueOf(lbl_TongTien.getText());
//                            serviceHD.thanhToanHD(lbl_maHD.getText(), getIDKH(), Double.valueOf(lbl_TongTien.getText()), getPTTT());
//                            this.fillTableHD(serviceHD.getAllHDChuaHT());
//                            JOptionPane.showMessageDialog(this, "Thanh Toán Thành Công !" + "\nSố tiền thối khách : " + String.valueOf(moneyTra) + " VNĐ");
//
//                        }
//                    } else if (rdo_ChuyenKhoan.isEnabled()) {
//                        serviceHD.thanhToanHD(lbl_maHD.getText(), getIDKH(), Double.valueOf(lbl_TongTien.getText()), getPTTT());
//                        this.fillTableHD(serviceHD.getAllHDChuaHT());
//                        JOptionPane.showMessageDialog(this, "Thanh toán thành công !");
//                    }
//                    }
//                } catch (Exception e) {
//                    System.out.println(e);
//                    JOptionPane.showMessageDialog(this, "Số tiền không hợp lệ !");
//                }
//
//            }
//            mol = (DefaultTableModel) tbl_hoaDonCT.getModel();
//            mol.setRowCount(0);
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(this, "Thanh toán thất bại ! ");
//        }
//    }
    private void thanhToanHD() {
        try {
            index = tbl_hoaDon.getSelectedRow();
            if (index < 0) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn hóa đơn thanh toán ! ");
            } // Đã chọn hóa đơn 
            else {
                try {
                    if (txt_KhachHang1.getText().equals("")) {
                        JOptionPane.showMessageDialog(this, "Vui lòng chọn khách hàng !");
                    }

                    if (rdo_TienMat.isSelected()) {
                        double moneyNhan = Integer.valueOf(JOptionPane.showInputDialog("Nhập số tiền nhận của khách "));
                        if (moneyNhan == Double.valueOf(lbl_TongTien.getText())) {
                            serviceHD.thanhToanHD(lbl_maHD.getText(), 1, Double.valueOf(lbl_TongTien.getText()), getPTTT());
                            this.fillTableHD(serviceHD.getAllHDChuaHT());
                            JOptionPane.showMessageDialog(this, "Thanh toán thành công !");
                        } else if (moneyNhan < Double.valueOf(lbl_TongTien.getText())) {
                            JOptionPane.showMessageDialog(this, "Thanh toán thât bại ! \nKhách đưa thiếu tiền !");
                        } else {
                            double moneyTra = moneyNhan - Double.valueOf(lbl_TongTien.getText());
                            serviceHD.thanhToanHD(lbl_maHD.getText(), 1, Double.valueOf(lbl_TongTien.getText()), getPTTT());
                            this.fillTableHD(serviceHD.getAllHDChuaHT());
                            JOptionPane.showMessageDialog(this, "Thanh Toán Thành Công !" + "\nSố tiền thối khách : " + String.valueOf(moneyTra) + " VNĐ");
                            mol = (DefaultTableModel) tbl_hoaDonCT.getModel();
                            mol.setRowCount(0);
                        }
                    } else if (rdo_ChuyenKhoan.isEnabled()) {
                        serviceHD.thanhToanHD(lbl_maHD.getText(), 1, Double.valueOf(lbl_TongTien.getText()), getPTTT());
                        this.fillTableHD(serviceHD.getAllHDChuaHT());
                        JOptionPane.showMessageDialog(this, "Thanh toán thành công !");
                        mol = (DefaultTableModel) tbl_hoaDonCT.getModel();
                        mol.setRowCount(0);
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Số tiền không hợp lệ !");
                }

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Thanh toán thất bại ! ");
        }
    }
  private void addMaGiamGia() {
        try {
            index = tbl_hoaDon.getSelectedRow();
            if (index < 0) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn hóa đơn thanh toán ! ");
            } // Đã chọn hóa đơn 
            else {
                String maKM = txt_MaGiamGia.getText().trim();
                int check_KM = 0;
                if (!maKM.isBlank()) {
                    for (KhuyenMai x : khuyenMaiservice.getKhuyenMai(new Date())) {
                        if (maKM.equalsIgnoreCase(x.getMa())) {
                            check_KM = 1;
                            // mã hóa đơn đúng
                            int giaTriKM = khuyenMaiservice.getGiaTriKM(maKM);
                            JOptionPane.showMessageDialog(this, "Bạn đã áp dụng thành công mã " + maKM + "\nBạn được giảm giá " + giaTriKM + "% vào tổng tiền hóa đơn");
                            float tien = (float) giaTriKM / 100;
                            double tienGiamGia = Double.valueOf(lbl_TongTien.getText()) * tien;
                            double tongTien = Double.valueOf(lbl_TongTien.getText()) - tienGiamGia;
                            double tongTien_roundedUp = Math.ceil(tongTien); // Làm tròn lên
                            lbl_TongTien.setText(String.valueOf(tongTien_roundedUp));
                            txt_MaGiamGia.setText("");
                            System.out.println("Tổng Tiền : " + lbl_TongTien.getText());
                            System.out.println("Tiền giảm giá : " + tienGiamGia);
                            System.out.println("giảm giá : " + tien);
                            System.out.println("Thành tiền : " + tongTien_roundedUp);
                        }
                    }
                    // mã không đúng , không tồn tại
                    if (check_KM == 0) {
                        JOptionPane.showMessageDialog(this, "Mã khuyến mãi không đúng !");
                    }
                    
                } else {
                    JOptionPane.showMessageDialog(this, "Vui lòng nhập mã khuyến mãi");
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Áp dụng thất bại !");
        }

    }
}
